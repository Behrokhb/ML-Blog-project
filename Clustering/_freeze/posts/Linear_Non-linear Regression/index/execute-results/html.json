{
  "hash": "3e25e2a87c7e964137cae7571e3bf976",
  "result": {
    "markdown": "---\ntitle: \"Post With Code\"\nauthor: \"Behrokh Bazmara\"\ndate: \"2023-12-01\"\ncategories: [news, code, analysis]\n---\n\n\n## Quarto\n\nQuarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.\n\n## Running Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n                   # Random Forest Regression\n\n#Loading dataset\nsetwd('C:/Users/behro/OneDrive/Desktop/SS-Infrastructure/project')\n\n#Install the packages\nlibrary(MASS)\nlibrary(lme4)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'lme4' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: Matrix\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'Matrix' was built under R version 4.2.3\n```\n:::\n\n```{.r .cell-code}\nlibrary(randomForest)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'randomForest' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nrandomForest 4.7-1.1\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nType rfNews() to see new features/changes/bug fixes.\n```\n:::\n\n```{.r .cell-code}\nlibrary(caTools)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'caTools' was built under R version 4.2.3\n```\n:::\n\n```{.r .cell-code}\n#install.packages(\"randomForest\")\n#install.packages(\"pdp\")\n#install.packages(\"randomForestExplainer\")\n#install.packages(\"ggplot2\")\n#install.packages(\"Boruta\")\nlibrary(Boruta)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'Boruta' was built under R version 4.2.3\n```\n:::\n\n```{.r .cell-code}\nlibrary(randomForest)\nlibrary(randomForestExplainer)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'randomForestExplainer' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nRegistered S3 method overwritten by 'GGally':\n  method from   \n  +.gg   ggplot2\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ggplot2' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'ggplot2'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:randomForest':\n\n    margin\n```\n:::\n\n```{.r .cell-code}\n# View the structure of the data set (Read in data)\nFitData2<-read.csv('Book3.csv') \nnames(FitData2)#looking at the data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"AADT\"         \"Latitude\"     \"Longitude\"    \"yn\"           \"Divided\"     \n [6] \"LaneCount\"    \"DGAC\"         \"Latex\"        \"SMA\"          \"PCCP\"        \n[11] \"Age\"          \"Friction\"     \"Macro\"        \"IRI\"          \"Gradient\"    \n[16] \"Curvature\"    \"LatitudeGPS\"  \"LongitudeGps\" \"Crash\"        \"lnAADT\"      \n```\n:::\n\n```{.r .cell-code}\n#splitting data into training and testing\nsplit <- sample.split(FitData2, SplitRatio=0.7)\ntrain <- subset(FitData2, split==\"TRUE\")\ntest <- subset (FitData2, split==\"FALSE\")\n\n# Fitting the random forest model\nset.seed(100) #Setting seed\nclassRF= randomForest(x=train[-13], y=train$Crash, ntree=500)\nclassRF\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\n randomForest(x = train[-13], y = train$Crash, ntree = 500) \n               Type of random forest: regression\n                     Number of trees: 500\nNo. of variables tried at each split: 6\n\n          Mean of squared residuals: 0.9273585\n                    % Var explained: 95.26\n```\n:::\n\n```{.r .cell-code}\n#Model prediction\nrf_model=predict(classRF, newdata= test[-13])\nsummary(rf_model)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n 0.00000  0.01837  0.94287  1.98225  2.03440 41.59207 \n```\n:::\n\n```{.r .cell-code}\n# Create a scatterplot of actual vs. predicted values\nplot(classRF$predicted, train$Crash,\n     main = \"Scatterplot of Actual vs. Predicted Values\",\n     xlab = \"Actual Values\", ylab = \"Predicted Values\",\n     col = \"darkblue\", pch = 16)\n\n# Add a diagonal line for reference\nabline(a = 0, b = 1, col = \"red\", lty = 2)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}